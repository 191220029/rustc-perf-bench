{
    "as_of": "2016-08-12T08:26:12+00:00",
    "benchmarks": [
        "helloworld",
        "html5ever-2015-05-15",
        "hyper.0.5.0",
        "inflate-0.1.0",
        "issue-32062-equality-relations-complexity",
        "issue-32278-big-array-of-strings",
        "jld-day15-parser",
        "piston-image-0.3.11",
        "regex-macros.0.1.30",
        "regex.0.1.30",
        "rust-encoding.0.2.32"
    ],
    "crates": [
        "liballoc",
        "liballoc_jemalloc",
        "liballoc_system",
        "libarena",
        "libcollections",
        "libcore",
        "libflate",
        "libfmt_macros",
        "libgetopts",
        "libgraphviz",
        "liblibc",
        "liblog",
        "libpanic_abort",
        "libpanic_unwind",
        "librand",
        "librbml",
        "librustc",
        "librustc_back",
        "librustc_bitflags",
        "librustc_borrowck",
        "librustc_const_eval",
        "librustc_const_math",
        "librustc_data_structures",
        "librustc_driver",
        "librustc_errors",
        "librustc_front",
        "librustc_incremental",
        "librustc_lint",
        "librustc_llvm",
        "librustc_metadata",
        "librustc_mir",
        "librustc_passes",
        "librustc_platform_intrinsics",
        "librustc_plugin",
        "librustc_privacy",
        "librustc_resolve",
        "librustc_save_analysis",
        "librustc_trans",
        "librustc_typeck",
        "librustc_unicode",
        "librustdoc",
        "libserialize",
        "libstd",
        "libsyntax",
        "libsyntax_ext",
        "libsyntax_pos",
        "libterm",
        "libtest",
        "libunicode",
        "libunwind",
        "rsbegin.o",
        "rsend.o",
        "total"
    ],
    "phases": [
        "AST validation",
        "LLVM passes",
        "MIR dump",
        "MIR passes",
        "Prepare MIR codegen passes",
        "assert dep graph",
        "assigning node ids",
        "assigning node ids and indexing ast",
        "attribute checking",
        "borrow checking",
        "checking for inline asm in case the target doesn't support it",
        "checking that all macro invocations are gone",
        "coherence checking",
        "collecting defs",
        "complete gated feature checking",
        "complete gated feature checking 1",
        "complete gated feature checking 2",
        "configuration",
        "configuration 1",
        "configuration 2",
        "const checking",
        "const fn bodies and arguments",
        "crate injection",
        "death checking",
        "drop-impl checking",
        "early lint checks",
        "effect checking",
        "erasing regions from MIR",
        "expansion",
        "external crate/lib resolution",
        "gated configuration checking",
        "gated macro checking",
        "indexing hir",
        "intrinsic checking",
        "item-bodies checking",
        "item-types checking",
        "language item collection",
        "lifetime resolution",
        "linking",
        "lint checking",
        "liveness checking",
        "load_dep_graph",
        "looking for entry point",
        "looking for plugin registrar",
        "loop checking",
        "lowering ast -> hir",
        "macro loading",
        "match checking",
        "maybe building test harness",
        "name resolution",
        "parsing",
        "plugin loading",
        "plugin registration",
        "prelude injection",
        "privacy checking",
        "reachability checking",
        "recursion limit",
        "region resolution",
        "resolution",
        "resolving dependency formats",
        "rvalue checking",
        "serialize dep graph",
        "serialize work products",
        "stability checking",
        "stability index",
        "static item recursion checking",
        "total",
        "translation",
        "type checking",
        "type collecting",
        "unused lib feature checking",
        "variance inference",
        "wf checking",
        "wf checking (new)",
        "wf checking (old)"
    ]
}